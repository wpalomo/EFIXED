<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollectionCbtesFirma.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>147, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v12.1" name="DevExpress.Utils.v12.1, Version=12.1.6.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollectionCbtesFirma.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v12.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMi4xLCBWZXJzaW9uPTEyLjEu
        Ni4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAL8TAAACcQIAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAITSURBVDhPpZNfb9JgFMb9ZP652a0xJt75BYh+ABfnvNAL
        k5l4QUg2MNsSg9mFV2M4JBvdMhPUYrqWPzKwYku3QumIllJogcf3PUoli+zGJ3netqfn/N7znrRX8J8i
        QL3ZQrlhoqK3cHJmod7uoG7ZZN0+p8R5IsDCsoDbzz7i7pqC++kGFkULS5JNvpf9gjefToDJhAouigDX
        FvfR65owTw2ccRvN0JVSEaWigtWttxiPfCqaVQjoWqfQdf2fNgwDibSMht6kolmFgB+2SYnzvJY6RqNp
        UNGsQsDAOYdlWbBtm668qFarodPp0PPLdJF1cAlg4rtotVqQZRmu60JVVXK5XIbjOFjfLc8/wlUG8Hpd
        RCIR9Pt9eJ6HaDSK4XCIQqGAZDKJV3v1SwAP9tgaIAgCxGIx5PN5aJqGdrsNQRAwHo+xnqni2wUAj/85
        AgeMaUcelCQJo9EIvu+TefxQ0lFVNZ5OR9rc2KD7GQDrgXXAzYun91N/KBmofP1OeXduLdCV5xHg+sN9
        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
        OiKiv/bmo6VJrLAuAAAAAElFTkSuQmCCCw==
</value>
  </data>
</root>