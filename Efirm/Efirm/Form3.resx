<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="icEditors.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="icEditors.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v12.1" name="DevExpress.Utils.v12.1, Version=12.1.6.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="icEditors.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v12.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMi4xLCBWZXJzaW9uPTEyLjEu
        Ni4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAKMNAAACxAEAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAABWUlEQVQ4T5WRv0vDQBiGb/AHrjcI
        biJ07uTkHxDQf8jNUVw6OLoXurs4OthFghghHTIZCraBIGlDTENCPr/3vqa09aL4wsNdr/e8Se5UE8/z
        6Df6/X5nudUaXVUVtVEUBY3HY+r1emfL/T9iLSgGdzSbzSjLMvJ9n+bzOTmOc7R0NmIt+Dreo6x7SHme
        k+u6Zq2tpLVgdHtt5kmSmM8IgsDAzq6oktYzqDsHZizL0pREUUTT6RQFWlSJxoZtFjeX5i1wiOvr+CQ4
        okqsBZDXxwZrARa3eb84lfmbSwsuQVGapgY4oko0rmqD+wHlLIRhuFqrzrvmFgAcUSW6aQZ4Wn2yv/qN
        w9sGjqgSHccxgZfhk3lVXFmzZgOOqBKN6wGTycSMfwFHVIn+UIr+AxxRJTrkxXXqurbOG+CIKtHFlaJ0
        R9En/4knYFPAjJhX5pkZMo/MAwNHKaW+AV4PYbRHUDeEAAAAAElFTkSuQmCCFQIAAIlQTkcNChoKAAAA
        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
        keB05Kmn6vkAAAAASUVORK5CYIIL
</value>
  </data>
</root>